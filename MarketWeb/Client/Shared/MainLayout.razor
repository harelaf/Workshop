@inherits LayoutComponentBase
@using MarketWeb.Client.Connect
@using MarketWeb.Client.Helpers
@using MarketWeb.Client.Services
@using MarketWeb.Shared
@using MarketWeb.Shared.DTO
@inject IMarketAPIClient marketAPIClient
@inject IAlertService AlertService
@inject NavigationManager NavigationManager

<style>
	body, h1, h2, h3, h4, h5, h6 {
		font-family: "Lato", sans-serif
	}

	.w3-bar, h1, button {
		font-family: "Montserrat", sans-serif
	}

	.fa-anchor, .fa-coffee {
		font-size: 200px
	}
</style>

<!-- Navbar -->
<div class="w3-top">
	<div class="w3-bar w3-blue w3-card w3-left-align w3-large">
		<a class="w3-bar-item w3-button w3-hide-medium w3-hide-large w3-right w3-padding-large w3-hover-white w3-large w3-blue" href="javascript:void(0);" onclick="myFunction()" title="Toggle Navigation Menu"><i class="fa fa-bars"></i></a>
		<a href="" class="w3-bar-item w3-button w3-padding-large w3-white">Home</a>
		<a href="/ShoppingCart" class="w3-bar-item w3-button w3-hide-small w3-padding-large w3-hover-white"><img alt="cart" src="https://i.pinimg.com/originals/15/4f/df/154fdf2f2759676a96e9aed653082276.png" width="25" height="25"></a>
		@if (!marketAPIClient.LoggedIn && !marketAPIClient.Admin)
		{
			<a href="/account/register" class="w3-bar-item w3-button w3-hide-small w3-padding-large w3-hover-white"> Register</a>
			<a href="/account/login" class="w3-bar-item w3-button w3-hide-small w3-padding-large w3-hover-white"> Login</a>
		}
		@if (marketAPIClient.LoggedIn || marketAPIClient.Admin)
		{
			<a href="/account/profile" class="w3-bar-item w3-button w3-hide-small w3-padding-large w3-hover-white"><img alt="profile" src="https://icons-for-free.com/iconfiles/png/512/avatar+human+man+profile+icon-1320085876716628234.png" width="25" height="25" /></a>
			<a href="/Logout" class="w3-bar-item w3-button w3-hide-small w3-padding-large w3-hover-white">Logout</a>
			<a href="/MyPurchaseHistory" class="w3-bar-item w3-button w3-hide-small w3-padding-large w3-hover-white">Purchase History</a>
			<a href="/MyMessages" class="w3-bar-item w3-button w3-hide-small w3-padding-large w3-hover-white">Messages</a>
			<a href="/openNewStore" class="w3-bar-item w3-button w3-hide-small w3-padding-large w3-hover-white">Open New Store</a>
		}
		@if (marketAPIClient.Admin)
		{
			<a href="/Administration" class="w3-bar-item w3-button w3-hide-small w3-padding-large w3-hover-white">Administration</a>
		}
		<div style="float:right">
			<div class='ikrNoti_Counter'>@notifications.Count()</div>
			<div class='ikrNoti_Button' @onclick="ToggleNotificationMenu"></div>
		</div>
	</div>

	<!-- Navbar on small screens -->
	<div id="navDemo" class="w3-bar-block w3-white w3-hide w3-hide-large w3-hide-medium w3-large">
		@if (!marketAPIClient.LoggedIn)
		{
			<a href="/account/register" class="w3-bar-item w3-button w3-padding-large"> Register</a>
			<a href="/account/login" class="w3-bar-item w3-button w3-padding-large"> Login</a>
		}
		@if (marketAPIClient.LoggedIn || marketAPIClient.Admin)
		{
			<a href="/account/profile" class="w3-bar-item w3-button w3-padding-large"><img alt="profile" src="https://icons-for-free.com/iconfiles/png/512/avatar+human+man+profile+icon-1320085876716628234.png" width="40" height="40" /></a>
			<a href="/Logout" class="w3-bar-item w3-button w3-padding-large">Logout</a>
			<a href="/MyPurchaseHistory" class="w3-bar-item w3-button w3-padding-large">Purchase History</a>
			<a href="/MyMessages" class="w3-bar-item w3-button w3-padding-large">Messages</a>
			<a href="/openNewStore" class="w3-bar-item w3-button w3-padding-large">Open New Store</a>
		}
		@if (marketAPIClient.Admin)
		{
			<a href="/Administration" class="w3-bar-item w3-button w3-padding-large">Administration</a>
		}
	</div>
	<div class='ikrNotifications' style="display:@BoxCss !important">
		<h3> Notifications </h3>
		<div class="container">
			@if (notifications.Count() == 0)
			{
				<p> No notifications. </p>
			}
			else
			{
				<div class='ikrNotificationItems'>
					@foreach (NotifyMessageDTO notification in notifications)
					{
						<div class='ikrSingleNotiDiv'>
							Blegh
						</div>
					}
				</div>
			}
		</div>

	</div>
	<Alert />
</div>
<div class="main">
	<div>
		<br />
		<br />
		<br />
		<main role="main" class="pb-3">
			<CascadingValue Value=btn_clicked >
				@Body
			</CascadingValue>
		</main>
	</div>
	<footer class="border-top footer text-muted">
		<div class="container">
			&copy; 2022 - Market Project - Afik | Avishay | Harel | Oren | Ron
		</div>
	</footer>
</div>


@code {
	private ICollection<NotifyMessageDTO> notifications = new List<NotifyMessageDTO>();

	private string BoxCss = "none";

	bool collapseNavMenu = true;

	string baseMenuClass = "navbar-collapse d-sm-inline-flex flex-sm-row-reverse";

	string NavMenuCssClass => baseMenuClass + (collapseNavMenu ? " collapse" : "");

	void ToggleNavMenu()
	{
		collapseNavMenu = !collapseNavMenu;
	}

	private void ToggleNotificationMenu()
	{
		if (BoxCss == "none") BoxCss = "block";
		else BoxCss = "none";
	}

	EventCallback _btn_clicked = EventCallback.Empty;
	EventCallback btn_clicked  {
		get {
			if (_btn_clicked.Equals(EventCallback.Empty))
				_btn_clicked = EventCallback.Factory.Create(this, GetNotifications);
			return _btn_clicked;
		}
	}

	public async void GetNotifications()
	{
		try
        {
			Response<ICollection<NotifyMessageDTO>> response = await marketAPIClient.GetRegisteredMessagesNotofication();
            if (response.ErrorOccured)
            {
                throw new Exception(response.ErrorMessage);
            }
            notifications = response.Value;
        }
        catch (Exception ex)
        {
            AlertService.Error(ex.Message);
        }
        finally
        {
            StateHasChanged();
        }
	}

	public void ClearNotifications()
	{
		notifications = new List<NotifyMessageDTO>();
        StateHasChanged();
	}
}
